{
  "name": "root",
  "version": "1.0.0",
  "description": "",
  "homepage": "https://microsoft.github.io/BotFramework-WebChat/01.getting-started/g.hybrid-react-npm/",
  "main": "index.js",
  "private": true,
  "scripts": {
    "auditfix": "npm audit fix --legacy-peer-deps || exit 0",
    "build": "lerna run build",
    "bump": "if [ `cat package.json | jq -r '(.devDependencies, .devDependencies) | length'` -ne 0 ]; then npm install --legacy-peer-deps $(cat package.json | jq -r '(.pinDependencies // {}) as $p | ((.dependencies // {}), (.devDependencies // {}) | keys) | map(. + \"@\" + ($p[.] // [\"latest\"])[0]) | .[]') && npm audit fix --legacy-peer-deps || exit 0; fi",
    "postauditfix": "npm run postbump",
    "postbump": "cat package.json | jq '. + (.dependencies = ((.dependencies + (.localPeerDepedencies // {})) | to_entries | sort_by(.key) | from_entries)) | (.devDependencies = ((.devDependencies + (.localPeerDevDepedencies // {})) | to_entries | sort_by(.key) | from_entries))' > package-temp.json && mv package-temp.json package.json",
    "postinstall": "lerna bootstrap",
    "preauditfix": "npm run prebump",
    "prebump": "cat package.json | jq '(((.localPeerDepedencies // {}) | keys | map([\"dependencies\", .])) + ((.localPeerDevDepedencies // {}) | keys | map([\"devDependencies\", .]))) as $localPeerPaths | delpaths($localPeerPaths)' > package-temp.json && mv package-temp.json package.json",
    "start": "lerna run build --scope=chat-component && lerna run start --parallel --stream"
  },
  "license": "MIT",
  "dependencies": {},
  "devDependencies": {
    "lerna": "^6.1.0"
  }
}
