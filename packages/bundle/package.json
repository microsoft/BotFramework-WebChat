{
  "name": "botframework-webchat",
  "version": "0.0.0-0",
  "description": "A highly-customizable web-based chat client for Azure Bot Services.",
  "main": "./lib/index.js",
  "types": "./lib/index.d.ts",
  "exports": {
    ".": {
      "import": {
        "types": "./dist/botframework-webchat.d.mts",
        "default": "./dist/botframework-webchat.mjs"
      },
      "require": {
        "types": "./lib/index.d.ts",
        "default": "./lib/index.js"
      }
    }
  },
  "publishConfig": {
    "access": "public"
  },
  "author": "Microsoft Corporation",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/microsoft/BotFramework-WebChat.git"
  },
  "bugs": {
    "url": "https://github.com/microsoft/BotFramework-WebChat/issues"
  },
  "homepage": "https://github.com/microsoft/BotFramework-WebChat/#readme",
  "files": [
    "./dist/**/*",
    "./lib/**/*",
    "./src/**/*"
  ],
  "tsd": {
    "compilerOptions": {
      "allowSyntheticDefaultImports": true,
      "downlevelIteration": true,
      "jsx": "react",
      "noImplicitAny": false,
      "resolveJsonModule": true,
      "skipLibCheck": true,
      "strict": false
    }
  },
  "scripts": {
    "auditfix": "npm audit fix --legacy-peer-deps || exit 0",
    "build": "npm run build:tsup && npm run build:typescript && npm run build:babel && npm run build:webpack",
    "build:babel": "cross-env build_tool=babel module_format=commonjs babel src --extensions .js,.ts,.tsx --ignore **/*.spec.js,**/*.spec.ts,**/*.spec.tsx,**/*.test.js,**/*.test.ts,**/*.test.tsx,__tests__/**/*.js,__tests__/**/*.ts,__tests__/**/*.tsx --out-dir lib --verbose",
    "build:tsup": "tsup --config ./tsup.config.ts",
    "build:typescript": "tsc --project src/tsconfig.json",
    "build:webpack": "webpack-cli",
    "bump": "npm run bump:prod && npm run bump:dev && npm run bump:auditfix",
    "bump:auditfix": "npm audit fix --legacy-peer-deps || exit 0",
    "bump:dev": "if [ `cat package.json | jq -r '.devDependencies | length'` -ne 0 ]; then npm install --legacy-peer-deps $(cat package.json | jq -r '(.pinDependencies // {}) as $p | ((.devDependencies // {}) | keys) | map(. + \"@\" + ($p[.] // [\"latest\"])[0]) | .[]'); fi",
    "bump:prod": "if [ `cat package.json | jq -r '.dependencies | length'` -ne 0 ]; then npm install --legacy-peer-deps --save-exact $(cat package.json | jq -r '(.pinDependencies // {}) as $p | ((.dependencies // {}) | keys) | map(. + \"@\" + ($p[.] // [\"latest\"])[0]) | .[]'); fi",
    "eslint": "npm run precommit",
    "postauditfix": "npm run postbump",
    "postbump": "cat package.json | jq '. + (.dependencies = ((.dependencies + (.localPeerDependencies // {})) | to_entries | sort_by(.key) | from_entries)) | (.devDependencies = ((.devDependencies + (.localPeerDevDependencies // {})) | to_entries | sort_by(.key) | from_entries))' > package-temp.json && mv package-temp.json package.json",
    "preauditfix": "npm run prebump",
    "prebump": "cat package.json | jq '(((.localPeerDependencies // {}) | keys | map([\"dependencies\", .])) + ((.localPeerDevDependencies // {}) | keys | map([\"devDependencies\", .]))) as $localPeerPaths | delpaths($localPeerPaths)' > package-temp.json && mv package-temp.json package.json",
    "precommit": "npm run precommit:eslint -- src && npm run precommit:typecheck",
    "precommit:eslint": "../../node_modules/.bin/eslint --report-unused-disable-directives --max-warnings 0",
    "precommit:typecheck": "tsc --project ./src --emitDeclarationOnly false --esModuleInterop true --noEmit --pretty false",
    "start": "concurrently --kill-others --names \"babel,devserver,tsc,tsup\" \"npm run start:babel\" \"npm run start:devserver\" \"npm run start:typescript\" \"npm run start:tsup\"",
    "start:babel": "npm run build:babel -- --skip-initial-build --watch",
    "start:devserver": "node ./scripts/devServer.mjs",
    "start:tsup": "npm run build:tsup -- --watch",
    "start:typescript": "npm run build:typescript -- --watch"
  },
  "pinDependencies": {
    "@babel/cli": [
      "7.18.10",
      "@babel/*@7.21 is causing out-of-memory (OOM) issues"
    ],
    "@babel/core": [
      "7.19.1",
      "@babel/*@7.21 is causing out-of-memory (OOM) issues"
    ],
    "@babel/plugin-transform-runtime": [
      "7.19.1",
      "@babel/*@7.21 is causing out-of-memory (OOM) issues"
    ],
    "@babel/preset-env": [
      "7.19.1",
      "@babel/*@7.21 is causing out-of-memory (OOM) issues"
    ],
    "@babel/preset-react": [
      "7.18.6",
      "@babel/*@7.21 is causing out-of-memory (OOM) issues"
    ],
    "@babel/preset-typescript": [
      "7.18.6",
      "@babel/*@7.21 is causing out-of-memory (OOM) issues"
    ],
    "@babel/runtime": [
      "7.19.0",
      "@babel/*@7.21 is causing out-of-memory (OOM) issues"
    ],
    "@types/react": [
      "16",
      "react@16.8.6 is our baseline"
    ],
    "adaptivecards": [
      "3.0.2",
      "needs to bump manually"
    ],
    "markdown-it": [
      "13",
      "markdown-it@14.1.0 has module field and it is breaking Webpack 4 because cross loading CJS and ESM"
    ],
    "microsoft-cognitiveservices-speech-sdk": [
      "1.17.0",
      "needs to bump manually"
    ],
    "swiper": [
      "^8.2.6",
      "required by Adaptive Cards but they forget to include in adaptivecards@3.0.2"
    ],
    "uuid": [
      "8",
      "uuid@9 emit non-ES5 build because of default parameters"
    ]
  },
  "dependencies": {
    "@babel/runtime": "7.19.0",
    "adaptivecards": "3.0.2",
    "botframework-directlinejs": "0.15.5",
    "botframework-directlinespeech-sdk": "0.0.0-0",
    "botframework-webchat-api": "0.0.0-0",
    "botframework-webchat-component": "0.0.0-0",
    "botframework-webchat-core": "0.0.0-0",
    "classnames": "2.5.1",
    "core-js": "3.37.0",
    "markdown-it": "13.0.2",
    "markdown-it-attrs": "4.1.6",
    "markdown-it-attrs-es5": "2.0.2",
    "markdown-it-for-inline": "2.0.1",
    "math-random": "2.0.1",
    "mdast-util-from-markdown": "2.0.0",
    "memoize-one": "6.0.0",
    "microsoft-cognitiveservices-speech-sdk": "1.17.0",
    "prop-types": "15.8.1",
    "sanitize-html": "2.13.0",
    "swiper": "8.4.7",
    "url-search-params-polyfill": "8.2.5",
    "uuid": "8.3.2",
    "web-speech-cognitive-services": "7.1.3",
    "whatwg-fetch": "3.6.20"
  },
  "devDependencies": {
    "@babel/cli": "^7.18.10",
    "@babel/core": "^7.19.1",
    "@babel/plugin-transform-runtime": "^7.19.1",
    "@babel/preset-env": "^7.19.1",
    "@babel/preset-react": "^7.18.6",
    "@babel/preset-typescript": "^7.18.6",
    "@types/dom-speech-recognition": "^0.0.4",
    "@types/mdast": "^4.0.3",
    "@types/node": "^20.12.11",
    "@types/react": "^16.14.60",
    "babel-loader": "^9.1.3",
    "babel-plugin-istanbul": "^6.1.1",
    "babel-plugin-transform-inline-environment-variables": "^0.4.4",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "esbuild": "^0.21.1",
    "isomorphic-react": "^0.0.0-0",
    "isomorphic-react-dom": "^0.0.0-0",
    "source-map-loader": "^5.0.0",
    "terser-webpack-plugin": "^5.3.10",
    "tsd": "^0.31.0",
    "type-fest": "^4.18.2",
    "typescript": "^5.4.5",
    "webpack": "^5.91.0",
    "webpack-cli": "^5.1.4",
    "webpack-stats-plugin": "^1.1.3"
  },
  "peerDependencies": {
    "react": ">= 16.8.6",
    "react-dom": ">= 16.8.6"
  },
  "localPeerDependencies": {
    "botframework-directlinespeech-sdk": "0.0.0-0",
    "botframework-webchat-api": "0.0.0-0",
    "botframework-webchat-component": "0.0.0-0",
    "botframework-webchat-core": "0.0.0-0"
  },
  "localPeerDevDependencies": {
    "isomorphic-react": "^0.0.0-0",
    "isomorphic-react-dom": "^0.0.0-0"
  }
}
